{"version":3,"file":"static/js/6.17b53122.chunk.js","mappings":"4NAEMA,EAAgBC,EAAAA,GAAAA,GAAH,uXAebC,EAAcD,EAAAA,GAAAA,IAAH,4EAIXE,EAAaF,EAAAA,GAAAA,GAAH,wCAGVG,EAAYH,EAAAA,GAAAA,GAAH,iG,SCyBf,EAvCkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,IAAD,WACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAExB,OACE,UAACP,EAAD,YACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,SAACJ,EAAD,CACEa,IACEJ,EAAW,UANA,mCAMA,OACWA,GAClB,4FAENK,IAAKN,EACLO,MAAM,WAGV,SAACd,EAAD,UAAaO,MAZCD,EAenB,OAIR,C,oKCnCKS,EAAajB,EAAAA,GAAAA,KAAH,4HAMVkB,EAAYlB,EAAAA,GAAAA,MAAH,+IAQTmB,EAAYnB,EAAAA,GAAAA,OAAH,wU,SCmBf,EA/Ba,SAAC,GAAkB,IAAhBoB,EAAe,EAAfA,SACd,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,SAAC,IAAD,WACE,UAACN,EAAD,CAAYG,SARK,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,GACTC,EAAe,GAChB,EAIG,WACE,SAACL,EAAD,CACEQ,KAAK,OACLC,KAAK,QACLC,MAAON,EACPO,SAjBa,SAAAL,GACnBD,EAAeC,EAAEM,OAAOF,MAAMG,cAC/B,EAgBOC,YAAY,uBAEd,SAACb,EAAD,CAAWO,KAAK,SAASO,SAAiC,KAAvBX,EAAYY,OAA/C,wBAMP,E,SCkBD,EA5Ce,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAK,UAAGQ,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAemC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,uGACsBC,EAAAA,EAAAA,IAAmBb,GADzC,OACQc,EADR,OAEQC,EAAUD,EAAMnC,KAAI,kBAAiC,CACzDC,GADwB,EAAGA,GAE3BC,MAFwB,EAAOA,MAG/BC,YAHwB,EAAcA,YAAd,IAK1B6B,EAAUI,GAPZ,4CAJc,sBACA,KAAVf,GADU,mCAadgB,EACD,GAAE,CAAChB,IAEJ,IAKMiB,EAAoB,SAAAC,GAExBT,EAD4B,KAAVS,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,EAED,OACE,6BACE,SAAC,EAAD,CAAM1B,SAZS,SAAAE,GACjBe,EAAgB,IAChBQ,EAAkBvB,EACnB,IAUIlB,IAAU,SAAC2C,EAAA,EAAD,CAAW3C,OAAQA,IAC7BA,EAAO4C,OAAS,IACf,SAAC,IAAD,WACE,sDAKT,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst MoviesGallery = styled.ul`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 20px;\n    margin-top: 0;\n    margin-bottom: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\nconst MoviesImage = styled.img`\n  box-shadow: 0 0 5px #000;\n  border-radius: 6px;\n`;\nconst MovieTitle = styled.h2`\n  color: #000;\n`;\nconst MovieItem = styled.li`\n  transition: all 0.3s;\n  &:hover {\n    transform: scale(1.005);\n  }\n`;\n\nexport { MoviesGallery, MoviesImage, MovieTitle, MovieItem };\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container } from 'components/App/App.styled';\nimport {\n  MoviesGallery,\n  MoviesImage,\n  MovieTitle,\n  MovieItem,\n} from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <MoviesGallery>\n        {movies.map(({ id, title, poster_path }) => {\n          const base_img_url = 'https://image.tmdb.org/t/p/w500';\n          return (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MoviesImage\n                  src={\n                    poster_path\n                      ? `${base_img_url}${poster_path}`\n                      : 'https://t4.ftcdn.net/jpg/04/70/29/97/240_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs.jpg'\n                  }\n                  alt={title}\n                  width=\"500\"\n                />\n              </Link>\n              <MovieTitle>{title}</MovieTitle>\n            </MovieItem>\n          );\n        })}\n      </MoviesGallery>\n    </Container>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst SearchForm = styled.form`\n  margin-bottom: 10px;\n  background-color: teal;\n  padding: 20px;\n  box-shadow: 0 2px 2px #000;\n`;\nconst InputForm = styled.input`\n  padding: 10px;\n  margin-right: 10px;\n  outline: none;\n  border: none;\n  font-size: 18px;\n  border-radius: 4px;\n`;\nconst BtnSubmit = styled.button`\n  border: none;\n  border-radius: 4px;\n  background-color: #28718d;\n  padding: 10px;\n  font-size: 18px;\n  transition: all 0.3s;\n  &:disabled {\n    background-color: grey;\n  }\n\n  &:hover,\n  &:focus {\n    &:not([disabled]) {\n      box-shadow: 0 0 5px #000;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport { SearchForm, InputForm, BtnSubmit };\n","import { Container } from 'components/App/App.styled';\nimport { SearchForm, InputForm, BtnSubmit } from './Form.styled';\nimport { useState } from 'react';\n\nconst Form = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSubmit}>\n        <InputForm\n          type=\"text\"\n          name=\"value\"\n          value={searchQuery}\n          onChange={handleChange}\n          placeholder=\"enter movies name\"\n        />\n        <BtnSubmit type=\"submit\" disabled={searchQuery.trim() === ''}>\n          Search\n        </BtnSubmit>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default Form;\n","import { searchMovieByValue } from 'api/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form';\nimport MovieList from 'components/MovieList';\nimport { Container } from 'components/App/App.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const value = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (value === '') {\n      return;\n    }\n    async function fetchMovies() {\n      const movie = await searchMovieByValue(value);\n      const results = movie.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster_path,\n      }));\n      setMovies(results);\n    }\n    fetchMovies();\n  }, [value]);\n\n  const formSubmit = searchQuery => {\n    setSearchParams('');\n    updateSearchValue(searchQuery);\n  };\n\n  const updateSearchValue = query => {\n    const nextValue = query !== '' ? { query } : {};\n    setSearchParams(nextValue);\n  };\n\n  return (\n    <main>\n      <Form onSubmit={formSubmit} />\n      {movies && <MovieList movies={movies} />}\n      {movies.length > 0 && (\n        <Container>\n          <h2>No results, try again</h2>\n        </Container>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesGallery","styled","MoviesImage","MovieTitle","MovieItem","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","SearchForm","InputForm","BtnSubmit","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","type","name","value","onChange","target","toLowerCase","placeholder","disabled","trim","useSearchParams","searchParams","setSearchParams","get","setMovies","useEffect","searchMovieByValue","movie","results","fetchMovies","updateSearchValue","query","MovieList","length"],"sourceRoot":""}